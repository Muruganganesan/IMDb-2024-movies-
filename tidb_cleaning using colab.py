# -*- coding: utf-8 -*-
"""TiDB cleaning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J_SND97zj-HOF_Bqu1nbqv4uxXppT6rq
"""

!pip install mysql-connector-python

# prompt: How to add a new column called genre to the above output and add values ​​like fantasy to it?

import pandas as pd
import re
import mysql.connector

# Establish database connection (make sure you have the correct credentials)
connection = mysql.connector.connect(
  host = "gateway01.ap-southeast-1.prod.aws.tidbcloud.com",
  port = 4000,
  user = "MFbdJWf4C73eB9h.root",
  password = "yw9C9ScImIB0y4Xt",
  database = "IMDb_movies",
)
mycursor = connection.cursor(buffered=True)

def convert_to_minutes(runtime):
    match = re.match(r'(?:(\d+)h)?\s*(?:(\d+)m)?', runtime)
    if match:
        hours = int(match.group(1)) if match.group(1) else 0
        minutes = int(match.group(2)) if match.group(2) else 0
        return hours * 60 + minutes
    return None

# 'K' notation உள்ள votes values-களை integer-ஆக மாற்றும் function
def convert_votes(vote):
    if isinstance(vote, str):
        # Improved string preprocessing to handle parentheses and commas more robustly
        vote = vote.strip("()").replace(',', '').strip()
        vote = re.sub(r'[()]', '', vote) # Removing any remaining parentheses

        if 'K' in vote:
            return int(float(vote.replace('K', '')) * 1000)  # "(91K)" -> 91000
        elif vote.isdigit():  # pure integer format-ல் இருந்தால்
            return int(vote)
    return 0  # ஏதேனும் other format இருந்தால் 0 return செய்யலாம்

mycursor.execute("select * from IMDb_movies.Fantasy")
out = mycursor.fetchall()

# Title-ல் உள்ள unwanted characters நீக்கி, votes column-ஐ மாற்றும்
cleaned_out = [[re.sub(r'^\d+\.\s*', '', row[0])] + [convert_to_minutes(row[1])] + list(row[2:-1]) + [convert_votes(row[-1])] for row in out]

# Assuming 'cleaned_out' is your data from the previous code
df = pd.DataFrame(cleaned_out, columns=[i[0] for i in mycursor.description])

# Add a new column 'genre' with the value 'fantasy'
df['genre'] = 'fantasy'

df

from tabulate import tabulate
print(tabulate(df, headers="keys", tablefmt="psql"))
#print(tabulate(cleaned_out, headers=[i[0] for i in mycursor.description], tablefmt="psql"))

# Save the DataFrame to a CSV file
df.to_csv('Fantasy_movie.csv', index=False)

# prompt: How to add a new column called genre to the above output and add values ​​like fantasy to it?

import pandas as pd
import re
import mysql.connector

# Establish database connection (make sure you have the correct credentials)
connection = mysql.connector.connect(
  host = "gateway01.ap-southeast-1.prod.aws.tidbcloud.com",
  port = 4000,
  user = "MFbdJWf4C73eB9h.root",
  password = "yw9C9ScImIB0y4Xt",
  database = "IMDb_movies",
)
mycursor = connection.cursor(buffered=True)

def convert_to_minutes(runtime):
    match = re.match(r'(?:(\d+)h)?\s*(?:(\d+)m)?', runtime)
    if match:
        hours = int(match.group(1)) if match.group(1) else 0
        minutes = int(match.group(2)) if match.group(2) else 0
        return hours * 60 + minutes
    return None

# 'K' notation உள்ள votes values-களை integer-ஆக மாற்றும் function
def convert_votes(vote):
    if isinstance(vote, str):
        # Improved string preprocessing to handle parentheses and commas more robustly
        vote = vote.strip("()").replace(',', '').strip()
        vote = re.sub(r'[()]', '', vote) # Removing any remaining parentheses

        if 'K' in vote:
            return int(float(vote.replace('K', '')) * 1000)  # "(91K)" -> 91000
        elif vote.isdigit():  # pure integer format-ல் இருந்தால்
            return int(vote)
    return 0  # ஏதேனும் other format இருந்தால் 0 return செய்யலாம்

mycursor.execute("select * from IMDb_movies.Animation")
out = mycursor.fetchall()

# Title-ல் உள்ள unwanted characters நீக்கி, votes column-ஐ மாற்றும்
cleaned_out = [[re.sub(r'^\d+\.\s*', '', row[0])] + [convert_to_minutes(row[1])] + list(row[2:-1]) + [convert_votes(row[-1])] for row in out]

# Assuming 'cleaned_out' is your data from the previous code
df = pd.DataFrame(cleaned_out, columns=[i[0] for i in mycursor.description])

# Add a new column 'genre' with the value 'Animation'
df['genre'] = 'Animation'

df

from tabulate import tabulate
print(tabulate(df, headers="keys", tablefmt="psql"))
#print(tabulate(cleaned_out, headers=[i[0] for i in mycursor.description], tablefmt="psql"))

# Save the DataFrame to a CSV file
df.to_csv('Animation_movie.csv', index=False)

# prompt: How to add a new column called genre to the above output and add values ​​like fantasy to it?

import pandas as pd
import re
import mysql.connector

# Establish database connection (make sure you have the correct credentials)
connection = mysql.connector.connect(
  host = "gateway01.ap-southeast-1.prod.aws.tidbcloud.com",
  port = 4000,
  user = "MFbdJWf4C73eB9h.root",
  password = "yw9C9ScImIB0y4Xt",
  database = "IMDb_movies",
)
mycursor = connection.cursor(buffered=True)

def convert_to_minutes(runtime):
    match = re.match(r'(?:(\d+)h)?\s*(?:(\d+)m)?', runtime)
    if match:
        hours = int(match.group(1)) if match.group(1) else 0
        minutes = int(match.group(2)) if match.group(2) else 0
        return hours * 60 + minutes
    return None

# 'K' notation உள்ள votes values-களை integer-ஆக மாற்றும் function
def convert_votes(vote):
    if isinstance(vote, str):
        # Improved string preprocessing to handle parentheses and commas more robustly
        vote = vote.strip("()").replace(',', '').strip()
        vote = re.sub(r'[()]', '', vote) # Removing any remaining parentheses

        if 'K' in vote:
            return int(float(vote.replace('K', '')) * 1000)  # "(91K)" -> 91000
        elif vote.isdigit():  # pure integer format-ல் இருந்தால்
            return int(vote)
    return 0  # ஏதேனும் other format இருந்தால் 0 return செய்யலாம்

mycursor.execute("select * from IMDb_movies.Adventure")
out = mycursor.fetchall()

# Title-ல் உள்ள unwanted characters நீக்கி, votes column-ஐ மாற்றும்
cleaned_out = [[re.sub(r'^\d+\.\s*', '', row[0])] + [convert_to_minutes(row[1])] + list(row[2:-1]) + [convert_votes(row[-1])] for row in out]

# Assuming 'cleaned_out' is your data from the previous code
df = pd.DataFrame(cleaned_out, columns=[i[0] for i in mycursor.description])

# Add a new column 'genre' with the value 'Adventure'
df['genre'] = 'Adventure'

df

from tabulate import tabulate
print(tabulate(df, headers="keys", tablefmt="psql"))
#print(tabulate(cleaned_out, headers=[i[0] for i in mycursor.description], tablefmt="psql"))

# Save the DataFrame to a CSV file
df.to_csv('Adventure_movie.csv', index=False)

# prompt: How to add a new column called genre to the above output and add values ​​like fantasy to it?

import pandas as pd
import re
import mysql.connector

# Establish database connection (make sure you have the correct credentials)
connection = mysql.connector.connect(
  host = "gateway01.ap-southeast-1.prod.aws.tidbcloud.com",
  port = 4000,
  user = "MFbdJWf4C73eB9h.root",
  password = "yw9C9ScImIB0y4Xt",
  database = "IMDb_movies",
)
mycursor = connection.cursor(buffered=True)

def convert_to_minutes(runtime):
    match = re.match(r'(?:(\d+)h)?\s*(?:(\d+)m)?', runtime)
    if match:
        hours = int(match.group(1)) if match.group(1) else 0
        minutes = int(match.group(2)) if match.group(2) else 0
        return hours * 60 + minutes
    return None

# 'K' notation உள்ள votes values-களை integer-ஆக மாற்றும் function
def convert_votes(vote):
    if isinstance(vote, str):
        # Improved string preprocessing to handle parentheses and commas more robustly
        vote = vote.strip("()").replace(',', '').strip()
        vote = re.sub(r'[()]', '', vote) # Removing any remaining parentheses

        if 'K' in vote:
            return int(float(vote.replace('K', '')) * 1000)  # "(91K)" -> 91000
        elif vote.isdigit():  # pure integer format-ல் இருந்தால்
            return int(vote)
    return 0  # ஏதேனும் other format இருந்தால் 0 return செய்யலாம்

mycursor.execute("select * from IMDb_movies.Family")
out = mycursor.fetchall()

# Title-ல் உள்ள unwanted characters நீக்கி, votes column-ஐ மாற்றும்
cleaned_out = [[re.sub(r'^\d+\.\s*', '', row[0])] + [convert_to_minutes(row[1])] + list(row[2:-1]) + [convert_votes(row[-1])] for row in out]

# Assuming 'cleaned_out' is your data from the previous code
df = pd.DataFrame(cleaned_out, columns=[i[0] for i in mycursor.description])

# Add a new column 'genre' with the value 'Family'
df['genre'] = 'Family'

df

from tabulate import tabulate
print(tabulate(df, headers="keys", tablefmt="psql"))
#print(tabulate(cleaned_out, headers=[i[0] for i in mycursor.description], tablefmt="psql"))

# Save the DataFrame to a CSV file
df.to_csv('Family_movie.csv', index=False)

# prompt: How to merge the four outputs above together

import pandas as pd
import re
import mysql.connector
from tabulate import tabulate
!pip install mysql-connector-python


def process_genre(genre_name):
  # Establish database connection (make sure you have the correct credentials)
  connection = mysql.connector.connect(
    host = "gateway01.ap-southeast-1.prod.aws.tidbcloud.com",
    port = 4000,
    user = "MFbdJWf4C73eB9h.root",
    password = "yw9C9ScImIB0y4Xt",
    database = "IMDb_movies",
  )
  mycursor = connection.cursor(buffered=True)

  def convert_to_minutes(runtime):
      match = re.match(r'(?:(\d+)h)?\s*(?:(\d+)m)?', runtime)
      if match:
          hours = int(match.group(1)) if match.group(1) else 0
          minutes = int(match.group(2)) if match.group(2) else 0
          return hours * 60 + minutes
      return None

  # 'K' notation உள்ள votes values-களை integer-ஆக மாற்றும் function
  def convert_votes(vote):
      if isinstance(vote, str):
          # Improved string preprocessing to handle parentheses and commas more robustly
          vote = vote.strip("()").replace(',', '').strip()
          vote = re.sub(r'[()]', '', vote) # Removing any remaining parentheses

          if 'K' in vote:
              return int(float(vote.replace('K', '')) * 1000)  # "(91K)" -> 91000
          elif vote.isdigit():  # pure integer format-ல் இருந்தால்
              return int(vote)
      return 0  # ஏதேனும் other format இருந்தால் 0 return செய்யலாம்

  mycursor.execute(f"select * from IMDb_movies.{genre_name}")
  out = mycursor.fetchall()

  # Title-ல் உள்ள unwanted characters நீக்கி, votes column-ஐ மாற்றும்
  cleaned_out = [[re.sub(r'^\d+\.\s*', '', row[0])] + [convert_to_minutes(row[1])] + list(row[2:-1]) + [convert_votes(row[-1])] for row in out]

  # Assuming 'cleaned_out' is your data from the previous code
  df = pd.DataFrame(cleaned_out, columns=[i[0] for i in mycursor.description])

  # Add a new column 'genre' with the value 'genre_name'
  df['genre'] = genre_name

  #print(tabulate(df, headers="keys", tablefmt="psql"))
  #print(tabulate(cleaned_out, headers=[i[0] for i in mycursor.description], tablefmt="psql"))

  # Save the DataFrame to a CSV file
  #df.to_csv(f'{genre_name}_movie.csv', index=False)
  return df

genres = ['Fantasy', 'Animation', 'Adventure', 'Family']
all_dfs = []
for genre in genres:
  all_dfs.append(process_genre(genre))

# Concatenate all DataFrames into a single DataFrame
merged_df = pd.concat(all_dfs, ignore_index=True)

print(tabulate(merged_df, headers="keys", tablefmt="psql"))

# Save the merged DataFrame to a CSV file
merged_df.to_csv('merged_movies.csv', index=False)

# prompt: Sort the output above from A to Z.

import pandas as pd
from tabulate import tabulate

# Assuming 'merged_df' is the DataFrame you want to sort

# Sort the DataFrame by the 'title' column in ascending order (A to Z)
merged_df_sorted = merged_df.sort_values('title') # Changed 'Title' to 'title'

print(tabulate(merged_df_sorted, headers="keys", tablefmt="psql"))

# Save the sorted DataFrame to a CSV file
merged_df_sorted.to_csv('merged_movies_sorted.csv', index=False)